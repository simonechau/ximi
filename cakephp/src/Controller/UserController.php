<?php
/**
 * Created by PhpStorm.
 * User: simonezhou
 * Date: 2016/5/7
 * Time: 14:05
 */

namespace App\Controller;

use Cake\Core\Configure;
use Cake\ORM\TableRegistry;

class UserController extends BaseController
{
    private $loginTable;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this -> loginTable = TableRegistry::get('login');
    }

    //初始化基本信息表单(api)
    public function getInfo() {
        $this -> autoRender = false;
        $ret = array('code' => '1', 'info' => '', 'data' => array());

        if (!$this -> userState) {
            $ret['code'] = 0;
            $ret['info'] = '已退出';
        } else if ($this -> request -> is('ajax')) {
            $query = $this -> loginTable -> find() -> where(['user_id' => $this -> userState]);
            $result = $query -> toList();

            foreach ($result as $row) {
                $ret['data']['name'] = $row['name'];
                $ret['data']['email'] = $row['email'];
                $ret['data']['personal'] = $row['personal'];

                $session = $this -> request -> session();
                $session -> write([
                    'user_id' => $result[0]['user_id'],
                    'user_name' => $result[0]['name']
                ]);
            }
        }

        $this -> response -> body(json_encode($ret));
    }

    //修改个人信息(api)
    public function updateInfo() {
        $this -> autoRender = false;
        $ret = array('code' => 1, 'info' => '修改成功');

        if ($this -> userState == Configure::read('LOGOUT_USER')) {
            $ret['code'] = 0;
            $ret['info'] = '已退出';
        } else if ($this -> request -> is('ajax')) {
            $user_id = $this -> userState;
            $name = $this -> request -> data('name');
            $email = $this -> request -> data('email');
            $personal = $this -> request -> data('personal');

            $query = $this -> loginTable -> query();
            $query -> update()
                -> set(['name' => $name, 'email' => $email, 'personal' => $personal])
                -> where(['user_id' => $user_id])
                -> execute();
        }

        $this -> response -> body(json_encode($ret));
    }

    //修改密码(api)
    public function updatePassword() {
        $this -> autoRender = false;
        $ret = array('code' => 1, 'info' => '更新成功');

        if ($this -> userState == Configure::read('LOGOUT_USER')) {
            $ret['code'] = 0;
            $ret['info'] = '已退出';
        } else if ($this -> request -> is('ajax')) {
            $old_password = $this -> request -> data('old_password');
            $new_password = $this -> request -> data('new_password');

            $query = $this -> loginTable -> find() -> where(['user_id' => $this -> userState]);
            $result = $query -> toList();
            foreach ($result as $row) {
                if ($old_password != $row['password']) {
                    $ret['code'] = -1;
                    $ret['info'] = '原密码不匹配, 修改失败';
                }
            }

            if ($ret['code'] != -1) {
                $query = $this -> loginTable -> query();
                $query -> update()
                       -> set(['password' => $new_password])
                       -> where(['user_id' => $this -> userState])
                       -> execute();
            }
        }

        $this -> response -> body(json_encode($ret));
    }
}